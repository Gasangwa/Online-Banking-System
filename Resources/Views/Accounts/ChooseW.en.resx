<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="Account number" xml:space="preserve">
    <value>Account number</value>
  </data>
  <data name="Account status" xml:space="preserve">
    <value>Account status</value>
  </data>
  <data name="Add account" xml:space="preserve">
    <value>Add account</value>
  </data>
  <data name="Add Money" xml:space="preserve">
    <value>Add Money</value>
  </data>
  <data name="Add new card" xml:space="preserve">
    <value>Add new card</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="Back to List" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="Bank Name and Address" xml:space="preserve">
    <value>Bank Name and Address</value>
  </data>
  <data name="Beneficiary" xml:space="preserve">
    <value>Beneficiary</value>
  </data>
  <data name="Buy with card" xml:space="preserve">
    <value>Buy with Card</value>
  </data>
  <data name="Card number" xml:space="preserve">
    <value>Card number</value>
  </data>
  <data name="Cards" xml:space="preserve">
    <value>Cards</value>
  </data>
  <data name="Change Limit" xml:space="preserve">
    <value>Change Limit</value>
  </data>
  <data name="Choose Account to Deposit money" xml:space="preserve">
    <value>Choose Account to Deposit money</value>
  </data>
  <data name="Choose Account to transfer money" xml:space="preserve">
    <value>Choose Account to transfer money</value>
  </data>
  <data name="Choose Account to Withdraw money" xml:space="preserve">
    <value>Choose Account to Withdraw money</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Close Account" xml:space="preserve">
    <value>Close Account</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Current" xml:space="preserve">
    <value>Current</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Date of birth" xml:space="preserve">
    <value>Date of birth</value>
  </data>
  <data name="Deposit" xml:space="preserve">
    <value>Deposit</value>
  </data>
  <data name="Deposit with card" xml:space="preserve">
    <value>Deposit with Card</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Enter your password to process the" xml:space="preserve">
    <value>Enter your password to process the</value>
  </data>
  <data name="Expiry date" xml:space="preserve">
    <value>Expiry date</value>
  </data>
  <data name="Folder empty" xml:space="preserve">
    <value>Folder empty</value>
  </data>
  <data name="Freeze" xml:space="preserve">
    <value>Freeze</value>
  </data>
  <data name="French" xml:space="preserve">
    <value>French</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="Inbox" xml:space="preserve">
    <value>Inbox</value>
  </data>
  <data name="Linked Card" xml:space="preserve">
    <value>Linked Card</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Manage your account" xml:space="preserve">
    <value>Manage your account</value>
  </data>
  <data name="Multi-currency" xml:space="preserve">
    <value>Multi-currency</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Name and Surname" xml:space="preserve">
    <value>Name and Surname</value>
  </data>
  <data name="Personal Data" xml:space="preserve">
    <value>Personal Data</value>
  </data>
  <data name="Phone number" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="Polish" xml:space="preserve">
    <value>Polish</value>
  </data>
  <data name="Postal code" xml:space="preserve">
    <value>Postal code</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Save money" xml:space="preserve">
    <value>Save money</value>
  </data>
  <data name="Saving" xml:space="preserve">
    <value>Saving</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Set new limit" xml:space="preserve">
    <value>Set new limit</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="Terminate Card" xml:space="preserve">
    <value>Terminate Card</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="Transfer" xml:space="preserve">
    <value>Transfer</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Unfreeze" xml:space="preserve">
    <value>Unfreeze</value>
  </data>
  <data name="Virtual-Card" xml:space="preserve">
    <value>Virtual-Card</value>
  </data>
  <data name="Withdraw" xml:space="preserve">
    <value>Withdraw</value>
  </data>
</root>